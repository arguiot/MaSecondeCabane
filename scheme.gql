type Product @collection(name: "products") {
  name: String!
  description: String!
  price: Float!
  quantity: Int!
  image: String! # Image URL
  category: Category!
}

type Customer @collection(name: "customers") {
  firstName: String!
  lastName: String!
  address: Address!
  telephone: String!
}

type Order @collection(name: "orders") {
  customer: Customer!
  line: [ProductLine!]!
  creationDate: Time!
  shipAddress: Address!
}

type Category @collection(name: "categories") {
  name: String!
  products: [Product!]
}

type Address @embedded {
  street: String!
  city: String!
  country: String!
  zipCode: String!
}

type ProductLine @embedded {
  product: Product!
  quantity: Int!
  price: Float! # Total price
}

input SubmitOrderProductInput {
  productId: ID!
  quantity: Int!
}

type Query {
  allProducts: [Product!]! @index(name: "all_products")
  allCustomers: [Customer!]! @index(name: "all_customers")
  allOrders: [Order!]! @index(name: "all_orders")
  allCategories: [Category!]! @index(name: "all_categories")
}

type Mutation {
  submitOrder(customerId: ID!, products: [SubmitOrderProductInput]): Order! @resolver(name: "submit_order")
}